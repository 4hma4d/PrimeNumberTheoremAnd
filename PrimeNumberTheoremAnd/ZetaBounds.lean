import Mathlib.Analysis.Calculus.ContDiff.Defs
import Mathlib.MeasureTheory.Integral.IntervalIntegral
import Mathlib.Analysis.Calculus.Deriv.Basic
import Mathlib.NumberTheory.ZetaFunction
import Mathlib.Algebra.Group.Basic
import EulerProducts.PNT
import PrimeNumberTheoremAnd.ResidueCalcOnRectangles

open BigOperators Complex Topology Filter

theorem ContDiffOn.hasDeriv_deriv {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {s : Set ‚Ñù} (œÜDiff : ContDiffOn ‚Ñù 1 œÜ s) {x : ‚Ñù}
    (x_in_s : s ‚àà nhds x) : HasDerivAt œÜ (deriv œÜ x) x :=
  (ContDiffAt.hasStrictDerivAt (œÜDiff.contDiffAt x_in_s) (by simp)).hasDerivAt

theorem ContDiffOn.continuousOn_deriv {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù}
    (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIoo a b)) :
    ContinuousOn (deriv œÜ) (Set.uIoo a b) := by
  apply ContDiffOn.continuousOn (ùïú := ‚Ñù) (n := 0)
  exact (fun h => ((contDiffOn_succ_iff_deriv_of_isOpen isOpen_Ioo).1 h).2) œÜDiff

theorem LinearDerivative_ofReal (x : ‚Ñù) (a b : ‚ÑÇ) : HasDerivAt (fun (t : ‚Ñù) ‚Ü¶ a * t + b) a x := by
  refine HasDerivAt.add_const ?_ b
  have := @ContinuousLinearMap.hasDerivAt (e := Complex.ofRealCLM) x
  have := this.const_mul (c := a)
  convert this using 1; simp

lemma sum_eq_int_deriv_aux2 {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} {k : ‚Ñ§}
    (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc a b)) :
    ‚à´ (x : ‚Ñù) in a..b, (k + 1 / 2 - x) * deriv œÜ x =
      (k + 1 / 2 - b) * œÜ b - (k + 1 / 2 - a) * œÜ a + ‚à´ (x : ‚Ñù) in a..b, œÜ x := by
  by_cases h : a = b
  ¬∑ rw [h]; simp
  push_neg at h
  wlog a_lt_b : a < b
  ¬∑ simp only [not_lt] at a_lt_b
    have b_lt_a : b < a := Ne.lt_of_le (id (Ne.symm h)) a_lt_b
    have œÜDiff' : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc b a) := by
      convert œÜDiff using 1
      exact Set.uIcc_comm b a
    have := @this œÜ b a k œÜDiff' (id (Ne.symm h)) b_lt_a
    rw [intervalIntegral.integral_symm] at this
    nth_rewrite 2 [intervalIntegral.integral_symm] at this
    have : -‚à´ (x : ‚Ñù) in a..b, (‚Üëk + 1 / 2 - ‚Üëx) * deriv œÜ x =
    (‚Üëk + 1 / 2 - ‚Üëa) * œÜ a - (‚Üëk + 1 / 2 - ‚Üëb) * œÜ b + -‚à´ (x : ‚Ñù) in a..b, œÜ x := this
    have := (neg_inj (a := - ‚à´ (x : ‚Ñù) in a..b, (‚Üëk + 1 / 2 - ‚Üëx) * deriv œÜ x)
      (b := (‚Üëk + 1 / 2 - ‚Üëa) * œÜ a - (‚Üëk + 1 / 2 - ‚Üëb) * œÜ b + -‚à´ (x : ‚Ñù) in a..b, œÜ x)).mpr this
    simp only [one_div, neg_neg, neg_add_rev, neg_sub] at this
    simp only [one_div]
    ring_nf
    ring_nf at this
    convert this using 1
    ring

  set v' := deriv œÜ
  set v := œÜ
  set u := fun (x : ‚Ñù) ‚Ü¶ (k + 1 / 2 - x : ‚ÑÇ)
  set u' := fun (x : ‚Ñù) ‚Ü¶ (-1 : ‚ÑÇ)
  have hu : ‚àÄ x ‚àà Set.uIcc a b, HasDerivAt u (u' x) x := by
    intros x hx
    convert LinearDerivative_ofReal x (-1 : ‚ÑÇ) (k + 1 / 2); ring
  have hv : ‚àÄ x ‚àà Set.uIcc a b, HasDerivAt v (v' x) x := by
    refine fun x hx ‚Ü¶ œÜDiff.hasDeriv_deriv ?_
    --- argh, what if x=a or b :( Need to somehow replace `uIcc` with `uIoo`
    sorry
  have hu' : IntervalIntegrable u' MeasureTheory.volume a b := by
    apply Continuous.intervalIntegrable
    continuity
  have hv' : IntervalIntegrable v' MeasureTheory.volume a b := by
    apply ContinuousOn.intervalIntegrable
    -- same problem, need to replace `uIcc` with `uIoo`
    --have := œÜDiff.continuousOn_deriv
    --convert ContDiffOn.continuousOn_deriv
    sorry
  convert intervalIntegral.integral_mul_deriv_eq_deriv_mul hu hv hu' hv' using 1
  simp [v, u]

lemma sum_eq_int_deriv_aux_eq {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} {k : ‚Ñ§}
    (b_eq_kpOne : b = k + 1) (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc a b)) :
    ‚àë n in Finset.Icc (k + 1) ‚åäb‚åã, œÜ n =
    (‚à´ x in a..b, œÜ x) + (‚åäb‚åã + 1 / 2 - b) * œÜ b - (k + 1 / 2 - a) * œÜ a
      - ‚à´ x in a..b, (k + 1 / 2 - x) * deriv œÜ x := by
  have flb_eq_k : ‚åäb‚åã = k + 1 := Int.floor_eq_iff.mpr ‚ü®by exact_mod_cast b_eq_kpOne.symm.le,
    by rw [b_eq_kpOne]; simp‚ü©
  simp only [flb_eq_k, Finset.Icc_self, Finset.sum_singleton, Int.cast_add, Int.cast_one]
  rw [sum_eq_int_deriv_aux2 œÜDiff, b_eq_kpOne]
  ring_nf

lemma sum_eq_int_deriv_aux_lt {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} {k : ‚Ñ§} (k_le_a : k ‚â§ a) (a_lt_b : a < b)
    (b_lt_kpOne : b < k + 1) (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc a b)) :
    ‚àë n in Finset.Icc (k + 1) ‚åäb‚åã, œÜ n =
    (‚à´ x in a..b, œÜ x) + (‚åäb‚åã + 1 / 2 - b) * œÜ b - (k + 1 / 2 - a) * œÜ a
      - ‚à´ x in a..b, (k + 1 / 2 - x) * deriv œÜ x := by
  have flb_eq_k : ‚åäb‚åã = k := Int.floor_eq_iff.mpr ‚ü®by linarith, by linarith‚ü©
  simp only [flb_eq_k, gt_iff_lt, lt_add_iff_pos_right, zero_lt_one, Finset.Icc_eq_empty_of_lt,
    Finset.sum_empty]
  rw [sum_eq_int_deriv_aux2 œÜDiff]
  ring_nf

lemma sum_eq_int_deriv_aux1 {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} {k : ‚Ñ§} (k_le_a : k ‚â§ a) (a_lt_b : a < b)
    (b_le_kpOne : b ‚â§ k + 1) (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc a b)) :
    ‚àë n in Finset.Icc (k + 1) ‚åäb‚åã, œÜ n =
    (‚à´ x in a..b, œÜ x) + (‚åäb‚åã + 1 / 2 - b) * œÜ b - (k + 1 / 2 - a) * œÜ a
      - ‚à´ x in a..b, (k + 1 / 2 - x) * deriv œÜ x := by
  by_cases h : b = k + 1
  ¬∑ exact sum_eq_int_deriv_aux_eq h œÜDiff
  ¬∑ exact sum_eq_int_deriv_aux_lt k_le_a a_lt_b (Ne.lt_of_le h b_le_kpOne) œÜDiff

/-%%
\begin{lemma}[sum_eq_int_deriv_aux]\label{sum_eq_int_deriv_aux}\lean{sum_eq_int_deriv_aux}\leanok
  Let $k \le a < b\le k+1$, with $k$ an integer, and let $\phi$ be continuously differentiable on
  $[a, b]$.
  Then
  \[
  \sum_{a < n \le b} \phi(n) = \int_a^b \phi(x) \, dx + \left(\lfloor b \rfloor + \frac{1}{2} - b\right) \phi(b) - \left(\lfloor a \rfloor + \frac{1}{2} - a\right) \phi(a) - \int_a^b \left(\lfloor x \rfloor + \frac{1}{2} - x\right) \phi'(x) \, dx.
  \]
\end{lemma}
%%-/
lemma sum_eq_int_deriv_aux {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} {k : ‚Ñ§} (k_le_a : k ‚â§ a) (a_lt_b : a < b)
    (b_le_kpOne : b ‚â§ k + 1) (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.uIcc a b)) :
    ‚àë n in Finset.Icc (‚åäa‚åã + 1) ‚åäb‚åã, œÜ n =
    (‚à´ x in a..b, œÜ x) + (‚åäb‚åã + 1 / 2 - b) * œÜ b - (‚åäa‚åã + 1 / 2 - a) * œÜ a
      - ‚à´ x in a..b, (‚åäx‚åã + 1 / 2 - x) * deriv œÜ x := by
  have fl_a_eq_k : ‚åäa‚åã = k := Int.floor_eq_iff.mpr ‚ü®k_le_a, by linarith‚ü©
  convert sum_eq_int_deriv_aux1 k_le_a a_lt_b b_le_kpOne œÜDiff using 2 <;> try {congr}
  apply intervalIntegral.integral_congr_ae
  have :  ‚àÄ·µê (x : ‚Ñù) ‚àÇMeasureTheory.volume, x ‚â† b := by
    convert Set.Countable.ae_not_mem (s := {b}) (by simp) (Œº := MeasureTheory.volume) using 1
  filter_upwards [this]
  intro x x_ne_b hx
  rw [Set.uIoc_of_le a_lt_b.le, Set.mem_Ioc] at hx
  congr
  exact Int.floor_eq_iff.mpr ‚ü®by linarith, by have := Ne.lt_of_le x_ne_b hx.2; linarith‚ü©
/-%%
\begin{proof}\leanok
Partial integration.
\end{proof}
%%-/

/-%%
\begin{lemma}[sum_eq_int_deriv]\label{sum_eq_int_deriv}\lean{sum_eq_int_deriv}\leanok
  Let $a < b$, and let $\phi$ be continuously differentiable on $[a, b]$.
  Then
  \[
  \sum_{a < n \le b} \phi(n) = \int_a^b \phi(x) \, dx + \left(\lfloor b \rfloor + \frac{1}{2} - b\right) \phi(b) - \left(\lfloor a \rfloor + \frac{1}{2} - a\right) \phi(a) - \int_a^b \left(\lfloor x \rfloor + \frac{1}{2} - x\right) \phi'(x) \, dx.
  \]
\end{lemma}
%%-/
/-- ** Partial summation ** (TODO : Add to Mathlib).
  Note: Need to finish proof of `sum_eq_int_deriv_aux2` -/
theorem sum_eq_int_deriv {œÜ : ‚Ñù ‚Üí ‚ÑÇ} {a b : ‚Ñù} (a_lt_b : a < b)
    (œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.Icc a b)) :
    ‚àë n in Finset.Icc (‚åäa‚åã + 1) ‚åäb‚åã, œÜ n =
    (‚à´ x in a..b, œÜ x) + (‚åäb‚åã + 1 / 2 - b) * œÜ b - (‚åäa‚åã + 1 / 2 - a) * œÜ a
      - ‚à´ x in a..b, (‚åäx‚åã + 1 / 2 - x) * deriv œÜ x := by
  -- let k‚ÇÄ := ‚åäa‚åã
  -- let k‚ÇÅ := ‚åàb‚åâ
  -- have :
  --   ‚àë n in Finset.Icc (‚åäa‚åã + 1) ‚åäb‚åã, œÜ n
  --   =
  --   ‚àë k in Finset.Icc k‚ÇÄ k‚ÇÅ,
  --   ‚àë n in Finset.Icc (max (‚åäa‚åã + 1) k) (min ‚åäb‚åã (k+1)), œÜ n := by
  --   sorry
  sorry
/-%%
\begin{proof}\uses{sum_eq_int_deriv_aux}
  Apply Lemma \ref{sum_eq_int_deriv_aux} in blocks of length $\le 1$.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaSum_aux1]\label{ZetaSum_aux1}\lean{ZetaSum_aux1}\leanok
  Let $a < b$ be natural numbers and $s\in \C$ with $s \ne 1$.
  Then
  \[
  \sum_{a < n \le b} \frac{1}{n^s} =  \frac{b^{1-s} - a^{1-s}}{1-s} + \frac{b^{-s}-a^{-s}}{2} + s \int_a^b \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx.
  \]
\end{lemma}
%%-/
lemma ZetaSum_aux1 {a b : ‚Ñï} {s : ‚ÑÇ} (s_ne_one : s ‚â† 1) (a_lt_b : a < b) :
    ‚àë n in Finset.Icc (a + 1) b, 1 / (n : ‚ÑÇ)^s =
    (b ^ (1 - s) - a ^ (1 - s)) / (1 - s) + (b ^ (-s) - a ^ (-s)) / 2
      + s * ‚à´ x in a..b, (‚åäx‚åã + 1 / 2 - x) / (x : ‚ÑÇ)^(s + 1) := by
  let œÜ := fun (x : ‚Ñù) ‚Ü¶ (x : ‚ÑÇ) ^ (-s)
  let œÜ' := fun (x : ‚Ñù) ‚Ü¶ -s / (x : ‚ÑÇ)^(s + 1)
  have œÜDiff : ContDiffOn ‚Ñù 1 œÜ (Set.Icc a b) := sorry
  convert sum_eq_int_deriv (by exact_mod_cast a_lt_b) œÜDiff using 1
  ¬∑ sorry
  ¬∑ sorry
/-%%
\begin{proof}\uses{sum_eq_int_deriv}
  Apply Lemma \ref{sum_eq_int_deriv} to the function $x \mapsto x^{-s}$.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaSum_aux1a]\label{ZetaSum_aux1a}\lean{ZetaSum_aux1a}\leanok
For any $0 < a < b$ and  $s \in \C$ with $\sigma=\Re(s)>0$,
$$
\left|\int_a^b \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx\right|
\le \frac{a^{-\sigma}-b^{-\sigma}}{\sigma}.
$$
\end{lemma}
%%-/
lemma ZetaSum_aux1a {a b : ‚Ñù} (apos : 0 < a) (a_lt_b : a < b) {s : ‚ÑÇ} (œÉpos : 0 < s.re) :
    Complex.abs (‚à´ x in a..b, (‚åäx‚åã + 1 / 2 - x) / (x : ‚ÑÇ)^(s + 1)) ‚â§
      (a ^ (-s.re) - b ^ (-s.re)) / s.re := by
  sorry
/-%%
\begin{proof}
Apply the triangle inequality
$$
\left|\int_a^b \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx\right|
\le \int_a^b \frac{1}{x^{\sigma+1}} \, dx,
$$
and evaluate the integral.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaSum_aux2]\label{ZetaSum_aux2}\lean{ZetaSum_aux2}\leanok
  Let $N$ be a natural number and $s\in \C$, $\Re(s)>1$.
  Then
  \[
  \sum_{N < n} \frac{1}{n^s} =  \frac{- N^{1-s}}{1-s} + \frac{-N^{-s}}{2} + s \int_N^\infty \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx.
  \]
\end{lemma}
%%-/
lemma ZetaSum_aux2 {N : ‚Ñï} {s : ‚ÑÇ} (s_re_pos : 1 < s.re) :
    ‚àë' (n : ‚Ñï), 1 / (n + N : ‚ÑÇ) ^ s =
    (- N ^ (1 - s)) / (1 - s) + (- N ^ (-s)) / 2
      + s * ‚à´ x in Set.Ici (N : ‚Ñù), (‚åäx‚åã + 1 / 2 - x) / (x : ‚ÑÇ)^(s + 1) := by
  sorry
/-%%
\begin{proof}\uses{ZetaSum_aux1, ZetaSum_aux1a}
  Apply Lemma \ref{ZetaSum_aux1} with $a=N$ and $b\to \infty$.
\end{proof}
%%-/

/-%%
\begin{definition}[RiemannZeta0]\label{RiemannZeta0}\lean{RiemannZeta0}\leanok
\uses{ZetaSum_aux2}
For any natural $N\ge1$, we define
$$
\zeta_0(N,s) :=
\sum_{1\le n < N} \frac1{n^s}
+
\frac{- N^{1-s}}{1-s} + \frac{-N^{-s}}{2} + s \int_N^\infty \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx
$$
\end{definition}
%%-/
noncomputable def RiemannZeta0 (N : ‚Ñï) (s : ‚ÑÇ) : ‚ÑÇ :=
  (‚àë n in Finset.Icc 1 (N - 1), 1 / (n : ‚ÑÇ) ^ s) +
  (- N ^ (1 - s)) / (1 - s) + (- N ^ (-s)) / 2
      + s * ‚à´ x in Set.Ici (N : ‚Ñù), (‚åäx‚åã + 1 / 2 - x) / (x : ‚ÑÇ)^(s + 1)

/-%%
\begin{lemma}[ZetaBnd_aux1]\label{ZetaBnd_aux1}\lean{ZetaBnd_aux1}\leanok
For any $N\ge1$ and $s\in \C$, $\sigma=\Re(s)\in[1/2,2]$,
$$
\left| s\int_N^\infty \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx \right|
\ll |t| \frac{N^{-\sigma}}{\sigma},
$$
as $|t|\to\infty$.
\end{lemma}
%%-/
lemma ZetaBnd_aux1 {N : ‚Ñï} (Npos : 1 ‚â§ N) {œÉ : ‚Ñù} (œÉ_ge : 1 / 2 ‚â§ œÉ) (œÉ_le : œÉ ‚â§ 2) :
    (fun (t : ‚Ñù) ‚Ü¶ Complex.abs ((œÉ + t * I) *
      ‚à´ x in Set.Ici (N : ‚Ñù), (‚åäx‚åã + 1 / 2 - x) / (x : ‚ÑÇ)^((œÉ + t * I) + 1)))
      =O[cocompact ‚Ñù] fun (t : ‚Ñù) ‚Ü¶ |t| * N ^ (-œÉ) / œÉ := by
  have := @ZetaSum_aux1a (a := N)
  sorry
/-%%
\begin{proof}\uses{ZetaSum_aux1a}
Apply Lemma \ref{ZetaSum_aux1a} with $a=N$ and $b\to \infty$, and estimate $|s|\ll |t|$.
\end{proof}
%%-/

/-%%
\begin{lemma}[Zeta0EqZeta]\label{Zeta0EqZeta}\lean{Zeta0EqZeta}\leanok
For $\Re(s)>0$, $s\ne1$, and for any $N$,
$$
\zeta_0(N,s) = \zeta(s).
$$
\end{lemma}
%%-/
lemma Zeta0EqZeta (N : ‚Ñï) (s : ‚ÑÇ) (reS_pos : 0 < s.re) (s_ne_one : s ‚â† 1) :
    RiemannZeta0 N s = riemannZeta s := by
  sorry
/-%%
\begin{proof}
\uses{ZetaSum_aux2, RiemannZeta0, ZetaBnd_aux1, ZetaBndAux}
Use Lemma \ref{ZetaSum_aux2} and the Definition \ref{RiemannZeta0}.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaBnd_aux2]\label{ZetaBnd_aux2}\lean{ZetaBnd_aux2}\leanok
Given $n ‚â§ t$ and $\sigma$ with $1-A/\log t \le \sigma$, we have
that
$$
|n^{-s}| \le n^{-1} e^A.
$$
\end{lemma}
%%-/
lemma ZetaBnd_aux2 {n : ‚Ñï} {t A œÉ : ‚Ñù} (Apos : 0 < A) (œÉpos : 0 < œÉ) (n_le_t : n ‚â§ t)
    (œÉ_ge : (1 : ‚Ñù) - A / Real.log |t| ‚â§ œÉ) :
    Complex.abs (n ^ (-(œÉ + t * I))) ‚â§ (n : ‚Ñù)‚Åª¬π * Real.exp A := by
  by_cases n0 : n = 0
  ¬∑ simp [n0]
    sorry
  sorry
/-%%
\begin{proof}
Use $|n^{-s}| = n^{-\sigma}
= e^{-\sigma \log n}
\le
\exp(-\left(1-\frac{A}{\log t}\right)\log n)
\le
n^{-1} e^A$,
since $n\le t$.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaUpperBnd]\label{ZetaUpperBnd}\lean{ZetaUpperBnd}\leanok
For any $s\in \C$, $1/2 \le \Re(s)=\sigma\le 2$,
and any $A>0$ sufficiently small, and $1-A/\log t \le \sigma$, we have
$$
|\zeta(s)| \ll \log t,
$$
as $|t|\to\infty$.
\end{lemma}
%%-/
lemma ZetaUpperBnd :
    ‚àÉ (A : ‚Ñù) (Apos : 0 < A) (C : ‚Ñù) (Cpos : 0 < C), ‚àÄ (œÉ : ‚Ñù) (t : ‚Ñù) (t_ge : 3 < |t|)
    (œÉ_ge : 1 - A / Real.log |t| ‚â§ œÉ) (œÉ_le : œÉ ‚â§ 2),
    Complex.abs (riemannZeta (œÉ + t * I)) ‚â§ C * Real.log |t| := by
  refine ‚ü®1/2, by norm_num, 10, by norm_num, ?_‚ü© -- placeholder values for `A` and `C`
  intro œÉ t t_ge œÉ_ge œÉ_le
  set N := ‚åä Real.log |t| ‚åã‚Çä
  have œÉPos :  0 < (‚ÜëœÉ + ‚Üët * I).re := by
    simp only [add_re, ofReal_re, mul_re, I_re, mul_zero, ofReal_im, I_im, mul_one, sub_self,
      add_zero]
    have : 1 < Real.log |t| := by
      sorry
    -- nlinarith
    sorry
  have neOne : ‚ÜëœÉ + ‚Üët * I ‚â† 1 := by
    sorry
  rw [‚Üê Zeta0EqZeta N (œÉ + t * I) œÉPos neOne]
  sorry
/-%%
\begin{proof}\uses{ZetaBnd_aux1, ZetaBnd_aux2}
First replace $\zeta(s)$ by $\zeta_0(N,s)$ for $N = \lfloor |t| \rfloor$.
We estimate:
$$
|\zeta_0(N,s)| \ll
\sum_{1\le n < |t|} |n^{-s}|
+
\frac{- |t|^{1-\sigma}}{|1-s|} + \frac{-|t|^{-\sigma}}{2} +
|t| * |t| ^ (-œÉ) / œÉ
$$
$$
\ll
e^A \sum_{1\le n < |t|} n^{-1}
+|t|^{1-\sigma}
$$
,
where we used Lemma \ref{ZetaBnd_aux2} and Lemma \ref{ZetaBnd_aux1}.
The first term is $\ll \log |t|$.
For the second term, estimate
$$
|t|^{1-\sigma}
\le |t|^{1-(1-A/\log |t|)}
= |t|^{A/\log |t|} \ll 1.
$$
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaDerivUpperBnd]\label{ZetaDerivUpperBnd}\lean{ZetaDerivUpperBnd}\leanok
For any $s\in \C$, $1/2 \le \Re(s)=\sigma\le 2$,
there is an $A>0$ so that for $1-A/\log t \le \sigma$, we have
$$
|\zeta'(s)| \ll \log^2 t,
$$
as $|t|\to\infty$.
\end{lemma}
%%-/
lemma ZetaDerivUpperBnd :
    ‚àÉ (A : ‚Ñù) (Apos : 0 < A) (C : ‚Ñù) (Cpos : 0 < C), ‚àÄ (œÉ : ‚Ñù) (t : ‚Ñù) (t_gt : 3 < |t|)
    (œÉ_ge : 1 - A / Real.log |t| ‚â§ œÉ) (œÉ_le : œÉ ‚â§ 2),
    Complex.abs (deriv riemannZeta (œÉ + t * I)) ‚â§ C * (Real.log |t|) ^ 2 := by
  sorry
/-%%
\begin{proof}\uses{ZetaBnd_aux1, ZetaBnd_aux2}
First replace $\zeta(s)$ by $\zeta_0(N,s)$ for $N = \lfloor |t| \rfloor$.
Differentiating term by term, we get:
$$
\zeta'(s) = -\sum_{1\le n < N} n^{-s} \log n
-
\frac{N^{1 - s}}{1 - s)^2} + \frac{N^{1 - s} \log N} {1 - s}
+ \frac{-N^{-s}\log N}{2} +
\int_N^\infty \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+1}} \, dx
-
s(s+1) \int_N^\infty \frac{\lfloor x\rfloor + 1/2 - x}{x^{s+2}} \, dx
.
$$
Estimate as before, with an extra factor of $\log |t|$.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaNear1Bnd]\label{ZetaNear1Bnd}\lean{ZetaNear1Bnd}\leanok
As $\sigma\to1^+$,
$$
|\zeta(\sigma)| \ll 1/(\sigma-1).
$$
\end{lemma}
%%-/
lemma ZetaNear1Bnd :
    (fun œÉ : ‚Ñù ‚Ü¶ Complex.abs (riemannZeta œÉ)) =O[ùìù[>](1:‚Ñù)] (fun œÉ ‚Ü¶ 1 / (œÉ - 1)) :=
  sorry
/-%%
\begin{proof}\uses{ZetaBnd_aux1, Zeta0EqZeta}
Zeta has a simple pole at $s=1$. Equivalently, $\zeta(s)(s-1)$ remains bounded near $1$.
Lots of ways to prove this.
Probably the easiest one: use the expression for $\zeta_0 (N,s)$ with $N=1$ (the term $N^{1-s}/(1-s)$ being the only unbounded one).
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaInvBound1]\label{ZetaInvBound1}\lean{ZetaInvBound1}\leanok
For all $\sigma>1$,
$$
1/|\zeta(\sigma+it)| \le |\zeta(\sigma)|^{3/4}|\zeta(\sigma+2it)|^{1/4}
$$
\end{lemma}
%%-/
lemma ZetaInvBound1 {œÉ t : ‚Ñù} (œÉ_gt : 1 < œÉ) :
    1 / Complex.abs (riemannZeta (œÉ + t * I)) ‚â§
      Complex.abs (riemannZeta œÉ) ^ ((3 : ‚Ñù) / 4) *
        Complex.abs (riemannZeta (œÉ + 2 * t * I)) ^ ((1 : ‚Ñù) / 4) := by
  sorry -- use `norm_zeta_product_ge_one`
/-%%
\begin{proof}
The identity
$$
1 \le |\zeta(\sigma)|^3 |\zeta(\sigma+it)|^4 |\zeta(\sigma+2it)|
$$
for $\sigma>1$
is already proved by Michael Stoll in the EulerProducts PNT file.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaInvBound2]\label{ZetaInvBound2}\lean{ZetaInvBound2}\leanok
For $\sigma>1$ (and $\sigma \le 2$),
$$
1/|\zeta(\sigma+it)| \ll (\sigma-1)^{3/4}(\log |t|)^{1/4},
$$
as $|t|\to\infty$.
\end{lemma}
%%-/
lemma ZetaInvBound2 {œÉ : ‚Ñù} (œÉ_gt : 1 < œÉ) (œÉ_le : œÉ ‚â§ 2) :
    (fun (t : ‚Ñù) ‚Ü¶ 1 / Complex.abs (riemannZeta (œÉ + t * I))) =O[cocompact ‚Ñù]
      fun (t : ‚Ñù) ‚Ü¶ (œÉ - 1) ^ (-(3 : ‚Ñù) / 4) * (Real.log |t|) ^ ((1 : ‚Ñù) / 4) := by
  sorry
/-%%
\begin{proof}\uses{ZetaInvBound1, ZetaNear1Bnd, ZetaUpperBnd}
Combine Lemma \ref{ZetaInvBound1} with the bounds in Lemmata \ref{ZetaNear1Bnd} and
\ref{ZetaUpperBnd}.
\end{proof}
%%-/

/-%%
\begin{lemma}[Zeta_eq_int_derivZeta]\label{Zeta_eq_int_derivZeta}\lean{Zeta_eq_int_derivZeta}
\leanok
For any $t\ne0$ (so we don't pass through the pole), and $\sigma_1 < \sigma_2$,
$$
\int_{\sigma_1}^{\sigma_2}\zeta'(\sigma + it) dt =
\zeta(\sigma_2+it) - \zeta(\sigma_1+it).
$$
\end{lemma}
%%-/
lemma Zeta_eq_int_derivZeta {œÉ‚ÇÅ œÉ‚ÇÇ t : ‚Ñù} (œÉ‚ÇÅ_lt_œÉ‚ÇÇ : œÉ‚ÇÅ < œÉ‚ÇÇ) (t_ne_zero : t ‚â† 0) :
    (‚à´ œÉ in Set.Icc œÉ‚ÇÅ œÉ‚ÇÇ, deriv riemannZeta (œÉ + t * I)) =
      riemannZeta (œÉ‚ÇÇ + t * I) - riemannZeta (œÉ‚ÇÅ + t * I) := by
  sorry
/-%%
\begin{proof}
This is the fundamental theorem of calculus.
\end{proof}
%%-/

/-%%
\begin{lemma}[Zeta_diff_Bnd]\label{Zeta_diff_Bnd}\lean{Zeta_diff_Bnd}\leanok
For any $A>0$ sufficiently small, there is a constant $C>0$ so that
whenever $1- A / \log t \le \sigma_1 < \sigma_2\le 2$, we have that:
$$
|\zeta (\sigma_2 + it) - \zeta (\sigma_1 + it)|
\le C (\log |t|)^2 (\sigma_2 - \sigma_1).
$$
\end{lemma}
%%-/
lemma Zeta_diff_Bnd :
    ‚àÉ (A : ‚Ñù) (Apos : 0 < A) (C : ‚Ñù) (Cpos : 0 < C), ‚àÄ (œÉ‚ÇÅ œÉ‚ÇÇ : ‚Ñù) (t : ‚Ñù) (t_gt : 3 < |t|)
    (œÉ‚ÇÅ_ge : 1 - A / Real.log |t| ‚â§ œÉ‚ÇÅ) (œÉ‚ÇÅ_le : œÉ‚ÇÅ ‚â§ 2)
    (œÉ‚ÇÇ_ge : 1 - A / Real.log |t| ‚â§ œÉ‚ÇÇ) (œÉ‚ÇÇ_le : œÉ‚ÇÇ ‚â§ 2) (œÉ‚ÇÅ_lt_œÉ‚ÇÇ : œÉ‚ÇÅ < œÉ‚ÇÇ),
    Complex.abs (riemannZeta (œÉ‚ÇÇ + t * I) - riemannZeta (œÉ‚ÇÅ + t * I)) ‚â§
      C * (Real.log |t|) ^ 2 * (œÉ‚ÇÇ - œÉ‚ÇÅ) := by
  obtain ‚ü®A, Apos, C, Cpos, hC‚ü© := ZetaDerivUpperBnd
  refine ‚ü®A, Apos, C, Cpos, ?_‚ü©
  intro œÉ‚ÇÅ œÉ‚ÇÇ t t_gt œÉ‚ÇÅ_ge œÉ‚ÇÅ_le œÉ‚ÇÇ_ge œÉ‚ÇÇ_le œÉ‚ÇÅ_lt_œÉ‚ÇÇ
  have : t ‚â† 0 := by sorry
  rw [‚Üê Zeta_eq_int_derivZeta œÉ‚ÇÅ_lt_œÉ‚ÇÇ this]
  sorry
/-%%
\begin{proof}
\uses{Zeta_eq_int_derivZeta, ZetaDerivUpperBnd}
Use Lemma \ref{Zeta_eq_int_derivZeta} and
estimate trivially using Lemma \ref{ZetaDerivUpperBnd}.
\end{proof}
%%-/

/-%%
\begin{lemma}[ZetaInvBnd]\label{ZetaInvBnd}\lean{ZetaInvBnd}\leanok
For any $A>0$ sufficiently small, there is a constant $C>0$ so that
whenever $1- A / \log^9 |t| \le \sigma < 1$, we have that:
$$
1/|\zeta(\sigma+it)| \le C \log^7 |t|.
$$
\end{lemma}
%%-/
lemma ZetaInvBnd :
    ‚àÉ (A : ‚Ñù) (Apos : 0 < A) (C : ‚Ñù) (Cpos : 0 < C), ‚àÄ (œÉ : ‚Ñù) (t : ‚Ñù) (t_gt : 3 < |t|)
    (œÉ_ge : 1 - A / (Real.log |t|) ^ 9 ‚â§ œÉ) (œÉ_lt : œÉ < 1),
    1 / Complex.abs (riemannZeta (œÉ + t * I)) ‚â§ C * (Real.log |t|) ^ 7 := by
  sorry
/-%%
\begin{proof}
\uses{Zeta_diff_Bnd, ZetaInvBound2}
Let $\sigma$ be given in the prescribed range, and set $\sigma' := 1+ A / \log^9 |t|$.
Then
$$
|\zeta(\sigma+it)| \ge
|\zeta(\sigma'+it)| - |\zeta(\sigma+it) - \zeta(\sigma'+it)|
\ge
C (\sigma'-1)^{-3/4}\log |t|^{-1/4} - C \log^2 |t| (\sigma'-\sigma)
$$
$$
\ge
C A^{-3/4} \log |t|^{-7} - C \log^2 |t| (2 A / \log^9 |t|),
$$
where we used Lemma \ref{ZetaInvBound2}  and Lemma \ref{Zeta_diff_Bnd}.
Now by making $A$ sufficiently small (in particular, something like $A = 1/16$ should work), we can guarantee that
$$
|\zeta(\sigma+it)| \ge \frac C 2 (\log |t|)^{-7},
$$
as desired.
\end{proof}
%%-/

/-%%
\begin{lemma}[LogDerivZetaBnd]\label{LogDerivZetaBnd}\lean{LogDerivZetaBnd}\leanok
There is an $A>0$ so that for $1-A/\log^9 |t| \le \sigma < 1$,
$$
|\frac {\zeta'}{\zeta} (\sigma+it)| \ll \log^9 |t|.
$$
\end{lemma}
%%-/
lemma LogDerivZetaBnd :
    ‚àÉ (A : ‚Ñù) (Apos : 0 < A) (C : ‚Ñù) (Cpos : 0 < C), ‚àÄ (œÉ : ‚Ñù) (t : ‚Ñù) (t_gt : 3 < |t|)
    (œÉ_ge : 1 - A / (Real.log |t|) ^ 9 ‚â§ œÉ) (œÉ_lt : œÉ < 1),
    Complex.abs (deriv riemannZeta (œÉ + t * I) / riemannZeta (œÉ + t * I)) ‚â§
      C * (Real.log |t|) ^ 9 := by
  sorry
/-%%
\begin{proof}
\uses{ZetaInvBnd, ZetaDerivUpperBnd}
Combine the bound on $|\zeta'|$ from Lemma \ref{ZetaDerivUpperBnd} with the bound on $1/|\zeta|$ from Lemma \ref{ZetaInvBnd}.
\end{proof}
%%-/
